#include <Wire.h>
#include <Adafruit_SSD1306.h>
#include <SoftwareSerial.h>

#define rxPin 3
#define txPin 2
#define OLED_RESET 4
Adafruit_SSD1306 display(OLED_RESET);

SoftwareSerial mySerial = SoftwareSerial(rxPin, txPin);

int tombol_1 = 2, tombol_2 = 3, tombol_3 = 4, tombol_4 = 5;
int led_1 = 6, led_2 = 7, led_3 = 8, led_4 = 9, mode_sistem = A0;

int state_button_1, state_button_2, state_button_3, state_button_4;

String dataIn;
String dt[10];
int i, tegangan;
int arus_1, arus_2, arus_3, arus_4;
boolean parsing = false;

void setup() {
  Serial.begin(9600);
  mySerial.begin(9600);
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  display.clearDisplay();
  pinMode(mode_sistem, INPUT_PULLUP);
  pinMode(led_1, OUTPUT);
  pinMode(led_2, OUTPUT);
  pinMode(led_3, OUTPUT);
  pinMode(led_4, OUTPUT);
  pinMode(tombol_1, INPUT_PULLUP);
  pinMode(tombol_2, INPUT_PULLUP);
  pinMode(tombol_3, INPUT_PULLUP);
  pinMode(tombol_4, INPUT_PULLUP);
  digitalWrite(led_1, HIGH);
  digitalWrite(led_2, HIGH);
  digitalWrite(led_3, HIGH);
  digitalWrite(led_4, HIGH);
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);
  display.println("Power Line Carrier");
  display.display();
  //delay(2000);
}

void loop() {
  


  if (digitalRead(mode_sistem) == LOW) {
    //Serial.println("z");
    display.clearDisplay();
    display.setTextSize(2);
    display.setTextColor(WHITE);
    display.setCursor(24, 1);
    display.println("CONTROL");
    display.display();
    if (digitalRead(tombol_1) == LOW) {
      while (digitalRead(tombol_1) == LOW) {
      }
      if (state_button_1 == 0) {
        state_button_1 = 1;
      } else {
        state_button_1 = 0;
      }
      delay(200);
    }

    if (digitalRead(tombol_2) == LOW) {
      while (digitalRead(tombol_2) == LOW) {
      }
      if (state_button_2 == 0) {
        state_button_2 = 1;
      } else {
        state_button_2 = 0;
      }
      delay(200);
    }

    if (digitalRead(tombol_3) == LOW) {
      while (digitalRead(tombol_3) == LOW) {
      }
      if (state_button_3 == 0) {
        state_button_3 = 1;
      } else {
        state_button_3 = 0;
      }
      delay(200);
    }

    if (digitalRead(tombol_4) == LOW) {
      while (digitalRead(tombol_4) == LOW) {
      }
      if (state_button_4 == 0) {
        state_button_4 = 1;
      } else {
        state_button_4 = 0;
      }
      delay(200);
    }

    kontrol_button();

  } else {

    if (mySerial.available() > 0) {
      char inChar = (char)mySerial.read();
      dataIn += inChar;
      if (inChar == '\n') {
        parsing = true;
      }
    }
    if (parsing) {
      Serial.println(dataIn);
      parsingData();
      parsing = false;
      dataIn = "";
    }
    display.clearDisplay();
    display.setTextSize(1.3);
    display.setTextColor(WHITE);
    display.setCursor(90, 4);
    display.print("V");

    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(90, 18);
    display.print(tegangan);

    display.setTextSize(1.1);
    display.setTextColor(WHITE);
    display.setCursor(0, 0);
    display.print("1 = ");
    display.print(arus_1);
    display.println(" mA");

    display.setTextSize(1.1);
    display.setTextColor(WHITE);
    display.setCursor(0, 8);
    display.print("2 = ");
    display.print(arus_2);
    display.println(" mA");

    display.setTextSize(1.1);
    display.setTextColor(WHITE);
    display.setCursor(0, 16);
    display.print("3 = ");
    display.print(arus_3);
    display.println(" mA");

    display.setTextSize(1.1);
    display.setTextColor(WHITE);
    display.setCursor(0, 24);
    display.print("4 = ");
    display.print(arus_4);
    display.println(" mA");
    display.display();
  }
}




void parsingData() {
  int j = 0;
  //kirim data yang telah diterima sebelumnya

  //inisialisasi variabel, (reset isi variabel)
  dt[j] = "";
  //proses parsing data
  for (i = 1; i < dataIn.length(); i++) {
    //pengecekan tiap karakter dengan karakter (#) dan (,)
    if ((dataIn[i] == '#') || (dataIn[i] == ',')) {
      //increment variabel j, digunakan untuk merubah index array penampung
      j++;
      dt[j] = "";  //inisialisasi variabel array dt[j]
    } else {
      //proses tampung data saat pengecekan karakter selesai.
      dt[j] = dt[j] + dataIn[i];
    }
  }

  tegangan = dt[0].toInt();
  //arus_1 = dt[1].toFloat();
  //arus_2 = dt[2].toFloat();
  //arus_3 = dt[3].toFloat();
  //arus_4 = dt[4].toFloat();



  Serial.print("Tegangan = ");
  Serial.println(tegangan);
  Serial.print("Arus 1 = ");
  Serial.println(arus_1);
  Serial.print("Arus 2 = ");
  Serial.println(arus_2);
  Serial.print("Arus 3 = ");
  Serial.println(arus_3);
  Serial.print("Arus 4 = ");
  Serial.println(arus_4);
}





void kontrol_button() {
  if (state_button_1 == 1) {
    digitalWrite(led_1, LOW);
    mySerial.println("1");
  } else {
    digitalWrite(led_1, HIGH);
    mySerial.println("2");
  }

  if (state_button_2 == 1) {
    digitalWrite(led_2, LOW);
    mySerial.println("3");
  } else {
    digitalWrite(led_2, HIGH);
    mySerial.println("4");
  }

  if (state_button_3 == 1) {
    digitalWrite(led_3, LOW);
    mySerial.println("5");
  } else {
    digitalWrite(led_3, HIGH);
    mySerial.println("6");
  }

  if (state_button_4 == 1) {
    digitalWrite(led_4, LOW);
    mySerial.println("7");
  } else {
    digitalWrite(led_4, HIGH);
    mySerial.println("8");
  }
}